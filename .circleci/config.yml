version: 2
jobs:
  build:
    docker:
      - image: itsthatguy/docker-cypress-sqitch:latest
        environment:
          TERM: xterm

      # Service container image available at `host: localhost`
      - image: circleci/postgres:10.4-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: steps_admin_test

    environment:
      NODE_ENV: test

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v1-api-dependencies-{{ checksum "apps/api/package-lock.json" }}
      - restore_cache:
          key: v1-admin-dependencies-{{ checksum "apps/admin/package-lock.json" }}

      - run:
          name: npm install
          command: npm ci

      - run:
          name: npm install:all
          command: npm run install:all

      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ~/repo/node_modules
            - ~/.cache

      - save_cache:
          key: v1-api-dependencies-{{ checksum "apps/api/package-lock.json" }}
          paths:
            - ~/repo/apps/api/node_modules

      - save_cache:
          key: v1-admin-dependencies-{{ checksum "apps/admin/package-lock.json" }}
          paths:
            - ~/repo/apps/admin/node_modules

      - run:
          name: Database migrations
          command: sqitch deploy --target pg://postgres@localhost/steps_admin_test

      - run:
          name: "Test: Admin"
          working_directory: ~/repo/apps/admin/
          command: |
            npm test -- --clearCache
            npm test -- -i

      - run:
          name: "Test: Api"
          working_directory: ~/repo/apps/api/
          command: |
            npm test -- --clearCache
            npm test

      - run:
          name: Drop test DB
          command: dropdb -U postgres -h localhost steps_admin_test

      - run:
          name: Create test DB
          command: createdb -U postgres -h localhost steps_admin_test

      - run:
          name: Database migrations
          command: sqitch deploy --target pg://postgres@localhost/steps_admin_test

      - run:
          name: build
          environment:
            NODE_ENV: production
            API_URL: /api
            AUTH0_ENABLED: "true"
          command: |
            $(npm bin)/lerna run build --stream

      - run:
          name: cypress (Auth0 Enabled)
          environment:
            NODE_ENV: production
            API_URL: /api
            PORT: "3000"
            AUTH0_ENABLED: "true"
          command: ./run-cypress.sh cypress/integration/coach_spec.js

      - run:
          name: cypress (Auth0 Disabled)
          environment:
            NODE_ENV: production
            API_URL: /api
            AUTH0_ENABLED: true
            PORT: "3000"
            AUTH0_ENABLED: false
          command: ./run-cypress.sh cypress/integration/api/authz_spec.js

      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
